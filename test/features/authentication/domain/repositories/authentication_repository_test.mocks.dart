// Mocks generated by Mockito 5.0.4 from annotations
// in numb_master/test/features/authentication/domain/repositories/authentication_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:numb_master/core/error/failures.dart' as _i5;
import 'package:numb_master/features/authentication/domain/entities/authentication_result.dart'
    as _i6;
import 'package:numb_master/features/authentication/domain/repositories/authentication_repository.dart'
    as _i3;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i3.AuthenticationRepository {
  MockAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.AuthenticationResult>> createAccount(
          {String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(
              #createAccount, [], {#email: email, #password: password}),
          returnValue:
              Future<_i2.Either<_i5.Failure, _i6.AuthenticationResult>>.value(
                  _FakeEither<_i5.Failure, _i6.AuthenticationResult>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i6.AuthenticationResult>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.AuthenticationResult>> logIn(
          {String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(#logIn, [], {#email: email, #password: password}),
          returnValue:
              Future<_i2.Either<_i5.Failure, _i6.AuthenticationResult>>.value(
                  _FakeEither<_i5.Failure, _i6.AuthenticationResult>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i6.AuthenticationResult>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.AuthenticationResult>> logOut() =>
      (super.noSuchMethod(Invocation.method(#logOut, []),
          returnValue:
              Future<_i2.Either<_i5.Failure, _i6.AuthenticationResult>>.value(
                  _FakeEither<_i5.Failure, _i6.AuthenticationResult>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i6.AuthenticationResult>>);
  @override
  _i6.AuthenticationResult getAuthenticationStatus() =>
      (super.noSuchMethod(Invocation.method(#getAuthenticationStatus, []),
              returnValue: _i6.AuthenticationResult.bad_credentials)
          as _i6.AuthenticationResult);
}
